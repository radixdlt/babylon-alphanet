name: Alphanet Wallet Extension build

on:
  push:
    paths:
      - "alphanet-walletextension/**"
  release:
    types: [published]
jobs:
  Upload-walletextension:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./alphanet-walletextension

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: yarn add ./radixdlt-transaction-library-v0.5.0.tgz

      - name: Test
        run: yarn test

      - name: Build extension
        run: yarn build

      - id: get_version
        name: Get babylon alphanet version
        uses: ./.github/actions/get-version
        with:
          github_event: ${{ github.event_name }}
          is_prerelease: ${{ github.event.release.prerelease }}
          commit_sha: ${{ github.sha }}
          release_tag: ${{ github.event.release.tag_name }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphanet-walletextension-${{ steps.get_version.outputs.babylon_alphanet_version }}
          path: alphanet-walletextension/dist
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

      - name: Get release
        if: github.event_name == 'release'
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Zip the dist folder
        if: github.event_name == 'release'
        run: |
           TAG_NAME="${{ github.event.release.tag_name }}"
           tar cvf alphanet-walletextension-$TAG_NAME.zip dist/
           ls -l
           pwd

      - name: Upload distribution zip
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./alphanet-walletextension/alphanet-walletextension-${{ github.event.release.tag_name }}.zip
          asset_name: alphanet-walletextension-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip

      # - name: Setup tags for docker image
      #   id: setup_tags
      #   run: |
      #     GH_EVENT_NAME=${{ github.event_name }} 
      #     if [[ ! -z $GH_EVENT_NAME ]] && [[ "$GH_EVENT_NAME" == "release" ]] && [[ github.event.release.prerelease ]];then
      #       RELEASE_VERSION="rc-${{ github.event.release.tag_name }}"
      #       echo "::set-output name=babylon_alphanet_tag::rc-$RELEASE_VERSION"
      #     else if [[ ! -z $GH_EVENT_NAME ]] && [[ "$GH_EVENT_NAME" == "release" ]];then
      #       RELEASE_VERSION="${{ github.event.release.tag_name }}"
      #     else
      #       RELEASE_VERSION="${{ github.sha }}"
      #     fi
      #     echo "Version: $RELEASE_VERSION"
      #     echo "::set-output name=babylon_alphanet_tag::$RELEASE_VERSION"